/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var P=Object.defineProperty;var B=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var O=Object.prototype.hasOwnProperty;var V=(g,s)=>{for(var t in s)P(g,t,{get:s[t],enumerable:!0})},H=(g,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let n of L(s))!O.call(g,n)&&n!==t&&P(g,n,{get:()=>s[n],enumerable:!(e=B(s,n))||e.enumerable});return g};var U=g=>H(P({},"__esModule",{value:!0}),g);var _={};V(_,{default:()=>E});module.exports=U(_);var p=require("obsidian");var x=require("obsidian"),b=class{constructor(s){this.cachedPrompts=[];this.lastFetchTime=0;this.CACHE_DURATION=24*60*60*1e3;this.CACHE_FILE=".writing-momentum/network-prompts.json";this.promptSources=[{name:"Writing Prompts Reddit",url:"https://www.reddit.com/r/WritingPrompts/hot.json?limit=50",selector:"json",transform:s=>{try{let t=JSON.parse(s),e=[];if(t.data&&t.data.children){for(let n of t.data.children)if(n.data&&n.data.title){let i=n.data.title;i=i.replace(/^\[.*?\]\s*/,""),i=i.trim(),i.length>20&&i.length<200&&e.push(i)}}return e}catch(t){return console.error("Error parsing Reddit JSON:",t),[]}}}];this.plugin=s,this.loadCachedPrompts()}async loadCachedPrompts(){try{let s=this.plugin.app.vault.getAbstractFileByPath(this.CACHE_FILE);if(s instanceof x.TFile){let t=await this.plugin.app.vault.read(s),e=JSON.parse(t);e.prompts&&Array.isArray(e.prompts)&&(this.cachedPrompts=e.prompts,this.lastFetchTime=e.timestamp||0)}}catch(s){}}async saveCachedPrompts(){try{let s={prompts:this.cachedPrompts,timestamp:this.lastFetchTime},t=".writing-momentum";await this.plugin.app.vault.adapter.exists(t)||await this.plugin.app.vault.createFolder(t);let n=this.plugin.app.vault.getAbstractFileByPath(this.CACHE_FILE);n instanceof x.TFile?await this.plugin.app.vault.modify(n,JSON.stringify(s,null,2)):await this.plugin.app.vault.create(this.CACHE_FILE,JSON.stringify(s,null,2))}catch(s){console.error("Error saving cached prompts:",s)}}async fetchNetworkPrompts(){let s=Date.now();if(this.cachedPrompts.length>0&&s-this.lastFetchTime<this.CACHE_DURATION)return this.cachedPrompts;try{let t=[];for(let e of this.promptSources)try{let n=await this.fetchFromSource(e);t.push(...n)}catch(n){console.error(`Error fetching from ${e.name}:`,n)}if(t.length>0){let e=[...new Set(t)].filter(n=>n.length>10&&n.length<300).slice(0,100);this.cachedPrompts=e,this.lastFetchTime=s,await this.saveCachedPrompts()}return this.cachedPrompts}catch(t){return console.error("Error fetching network prompts:",t),this.cachedPrompts}}async fetchFromSource(s){try{let t=await fetch(s.url,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"}});if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);let e=await t.text();if(s.transform){let n=s.transform(e);return Array.isArray(n)?n:[]}return this.extractPromptsFromHTML(e,s.selector)}catch(t){return console.error(`Error fetching from ${s.name}:`,t),[]}}extractPromptsFromHTML(s,t){let e=[];try{new DOMParser().parseFromString(s,"text/html").querySelectorAll(t).forEach(a=>{var l;let o=(l=a.textContent)==null?void 0:l.trim();o&&o.length>10&&o.length<300&&e.push(o)})}catch(n){console.error("Error parsing HTML:",n)}return e}getRandomNetworkPrompt(){if(this.cachedPrompts.length===0)return null;let s=Math.floor(Math.random()*this.cachedPrompts.length);return this.cachedPrompts[s]}async refreshPrompts(){return this.lastFetchTime=0,(await this.fetchNetworkPrompts()).length>0}getCachedPromptsCount(){return this.cachedPrompts.length}getLastFetchTime(){return this.lastFetchTime>0?new Date(this.lastFetchTime):null}};var I=require("obsidian"),C=class{constructor(s){this.scheduledReminders=new Map;this.snoozeQueue=new Map;this.plugin=s}start(){this.scheduleAllReminders(),this.plugin.registerInterval(window.setInterval(()=>this.checkReminders(),6e4))}stop(){this.scheduledReminders.clear(),this.snoozeQueue.clear()}scheduleAllReminders(){let s=this.plugin.settings.reminders.filter(t=>t.enabled);for(let t of s)this.scheduleReminder(t)}scheduleReminder(s){let t=new Date,e=t.getDay();if(!s.days.includes(e))return;let[n,i]=s.time.split(":").map(Number),r=new Date;if(r.setHours(n,i,0,0),r<=t&&r.setDate(r.getDate()+1),this.isInDoNotDisturbPeriod(s))return;let a=window.setTimeout(()=>{this.triggerReminder(s)},r.getTime()-t.getTime());this.scheduledReminders.set(s.id,a)}isInDoNotDisturbPeriod(s){if(!s.dnd)return!1;let t=new Date,e=t.getHours()*60+t.getMinutes(),[n,i]=s.dnd.start.split(":").map(Number),[r,a]=s.dnd.end.split(":").map(Number),o=n*60+i,l=r*60+a;return o<=l?e>=o&&e<=l:e>=o||e<=l}async triggerReminder(s){let t="Time to write! Click to start your writing session.",e=new I.Notice(t,0),n=e.noticeEl;n.addClass("clickable-notice"),n.onclick=()=>{e.hide(),this.handleReminderClick(s)};let i=n.createEl("button",{text:"Snooze 10m",cls:"snooze-btn"});i.onclick=r=>{r.stopPropagation(),this.snoozeReminder(s.id,10),e.hide()},s.secondShotMins&&setTimeout(()=>{this.hasWrittenToday()||this.triggerReminder(s)},s.secondShotMins*60*1e3)}async handleReminderClick(s){try{await this.plugin.templateEngine.createNoteFromTemplate()}catch(t){console.error("Failed to create note from reminder:",t),new I.Notice("Failed to create writing note. Please try again.")}}snoozeReminder(s,t){let e=Date.now()+t*60*1e3;this.snoozeQueue.set(s,e),setTimeout(()=>{let n=this.plugin.settings.reminders.find(i=>i.id===s);n&&this.triggerReminder(n),this.snoozeQueue.delete(s)},t*60*1e3)}checkReminders(){}hasWrittenToday(){let s=new Date().toISOString().split("T")[0];return this.plugin.dataManager.getTodaysSessions().some(e=>e.completed&&e.wordCount>0)}reschedule(){this.stop(),this.start()}};var M=require("obsidian"),D=class{constructor(s){this.prompts=[];this.plugin=s}async initialize(){await this.loadPrompts()}extractVariables(s){let t=/\{\{([^}]+)\}\}/g,e=new Set,n;for(;(n=t.exec(s))!==null;)e.add(n[1].trim());return Array.from(e)}async loadPrompts(){let s=this.plugin.settings.paths.prompts,t=this.plugin.app.vault.getAbstractFileByPath(s);if(!(t instanceof M.TFile)){await this.createDefaultPrompts();return}try{let e=await this.plugin.app.vault.read(t);this.prompts=this.parsePrompts(e)}catch(e){console.error("Failed to load prompts:",e),await this.createDefaultPrompts()}}parsePrompts(s){let t=s.split(`
`),e=[];for(let n of t){let i=n.trim();i.startsWith("- ")||i.startsWith("* ")?e.push(i.substring(2)):i&&!i.startsWith("#")&&e.push(i)}return e.filter(n=>n.length>0)}async createDefaultPrompts(){let s=this.plugin.settings.paths.prompts,t=`# Writing Prompts

- What was the most meaningful moment today?
- What did I learn today?
- Express your current feeling in one word.
- What am I grateful for right now?
- What challenge did I overcome today?
- What would I tell my past self?
- What's one thing I want to remember about today?
- How did I grow today?
- What made me smile today?
- What am I looking forward to tomorrow?
- Describe today in exactly three words.
- What surprised me today?
- What would I change about today?
- What small victory can I celebrate?
- What's one thing I did well today?`;try{await this.plugin.app.vault.create(s,t),await this.loadPrompts()}catch(e){console.error("Failed to create default prompts:",e)}}async createNoteFromTemplate(s){let t=this.buildVariables(s),e=this.processTemplate(this.plugin.settings.defaultTitlePattern,t),n=this.processTemplate(this.plugin.settings.defaultTemplate,t),i={name:"title",value:e},r=this.processTemplate(n,[i]),a=`${e}.md`;try{let o=await this.plugin.app.vault.create(a,r);return await this.plugin.app.workspace.getLeaf().openFile(o),this.plugin.sessionManager.startSession(o.path,"default"),o}catch(o){if(o.message.includes("already exists")){let l=this.plugin.app.vault.getAbstractFileByPath(a);if(l instanceof M.TFile)return await this.plugin.app.workspace.getLeaf().openFile(l),l;throw new Error("File exists but is not a valid file")}throw o}}buildVariables(s){let t=new Date,e=[{name:"date",value:this.formatDate(t)},{name:"time",value:t.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"})},{name:"weekday",value:t.toLocaleDateString("en-US",{weekday:"long"})},{name:"vault",value:this.plugin.app.vault.getName()},{name:"random_prompt",value:()=>this.getRandomPrompt()}];if(s)for(let[n,i]of Object.entries(s))e.push({name:n,value:i});return e}processTemplate(s,t){let e=s;for(let n of t){let i=typeof n.value=="function"?n.value():n.value,r=new RegExp(`\\{\\{\\s*${n.name}\\s*\\}\\}`,"g");e=e.replace(r,i)}return e}formatDate(s){let t=this.plugin.settings.dateFormat,e=s.getFullYear(),n=String(s.getMonth()+1).padStart(2,"0"),i=String(s.getDate()).padStart(2,"0");return t.replace("YYYY",e.toString()).replace("MM",n).replace("DD",i)}getRandomPrompt(){var t;if((t=this.plugin.settings.randomPrompts)!=null&&t.enabled&&this.plugin.randomPrompts){let e=this.plugin.randomPrompts.getRandomNetworkPrompt();if(e){if(this.plugin.settings.randomPrompts.mixWithLocal){let n=[...this.prompts];if(n.length>0){if(Math.random()<.5)return e;{let i=Math.floor(Math.random()*n.length);return n[i]}}}return e}}if(this.prompts.length===0)return"What's on your mind today?";let s=Math.floor(Math.random()*this.prompts.length);return this.prompts[s]}getDefaultTemplate(){return{title:this.plugin.settings.defaultTitlePattern,content:this.plugin.settings.defaultTemplate}}async reloadPrompts(){await this.loadPrompts()}};var T=class{constructor(s){this.sessions=[];this.streak={current:0,longest:0,lastWritingDay:"",graceUsed:0,weeklyProgress:[]};this.plugin=s}async loadData(){let s=await this.plugin.loadData();s!=null&&s.writingData&&(this.sessions=s.writingData.sessions||[],this.streak=s.writingData.streak||this.getDefaultStreak())}async saveData(){let s=await this.plugin.loadData()||{};s.writingData={sessions:this.sessions,streak:this.streak,lastUpdated:new Date().toISOString()},await this.plugin.saveData(s)}getDefaultStreak(){return{current:0,longest:0,lastWritingDay:"",graceUsed:0,weeklyProgress:new Array(7).fill(0)}}async addSession(s){this.sessions.push(s),s.completed&&s.wordCount>0&&this.updateStreak(s.date),await this.saveData()}async updateSession(s,t){let e=this.sessions.findIndex(n=>n.id===s);e!==-1&&(this.sessions[e]={...this.sessions[e],...t},t.completed&&this.sessions[e].wordCount>0&&this.updateStreak(this.sessions[e].date),await this.saveData())}getTodaysSessions(){let s=new Date().toISOString().split("T")[0];return this.sessions.filter(t=>t.date===s)}getSessionsForDate(s){return this.sessions.filter(t=>t.date===s)}getSessionsForWeek(s){let t=new Date(s),e=new Date(t);return e.setDate(e.getDate()+7),this.sessions.filter(n=>{let i=new Date(n.date);return i>=t&&i<e})}getSessionsForMonth(s,t){return this.sessions.filter(e=>{let n=new Date(e.date);return n.getFullYear()===s&&n.getMonth()===t})}getTodaysWordCount(){return this.getTodaysSessions().filter(s=>s.completed).reduce((s,t)=>s+t.wordCount,0)}getWeekWordCount(){let s=new Date,t=new Date(s);return t.setDate(s.getDate()-s.getDay()),t.setHours(0,0,0,0),this.sessions.filter(e=>new Date(e.date)>=t&&e.completed).reduce((e,n)=>e+n.wordCount,0)}getMonthWordCount(){let s=new Date,t=new Date(s.getFullYear(),s.getMonth(),1);return this.sessions.filter(e=>new Date(e.date)>=t&&e.completed).reduce((e,n)=>e+n.wordCount,0)}updateStreak(s){let t=this.plugin.settings.streakRule,e=new Date().toISOString().split("T")[0],n=new Date(Date.now()-24*60*60*1e3).toISOString().split("T")[0];t.mode==="daily"?this.updateDailyStreak(s,e,n):this.updateWeeklyStreak()}updateDailyStreak(s,t,e){this.streak.lastWritingDay!==s&&(this.streak.lastWritingDay===e||this.streak.lastWritingDay===""?this.streak.current++:this.canUseGraceDay()?(this.streak.graceUsed++,this.streak.current++):(this.streak.current=1,this.streak.graceUsed=0),this.streak.lastWritingDay=s,this.streak.current>this.streak.longest&&(this.streak.longest=this.streak.current))}updateWeeklyStreak(){let s=new Date,t=new Date(s);t.setDate(s.getDate()-s.getDay());let e=this.getSessionsForWeek(t.toISOString().split("T")[0]),n=new Set(e.filter(o=>o.completed&&o.wordCount>0).map(o=>o.date)).size,i=this.plugin.settings.streakRule.target,r=t.toISOString().split("T")[0],a=this.streak.lastWritingDay;if(n>=i)a!==r&&(this.streak.current++,this.streak.lastWritingDay=r,this.streak.current>this.streak.longest&&(this.streak.longest=this.streak.current));else{let o=new Date().toISOString().split("T")[0],l=new Date(t);l.setDate(l.getDate()+6),o>l.toISOString().split("T")[0]&&a!==r&&(this.streak.current=0,this.streak.graceUsed=0,this.streak.lastWritingDay=r)}this.streak.weeklyProgress=new Array(7).fill(0);for(let o=0;o<7;o++){let l=new Date(t);l.setDate(t.getDate()+o);let c=l.toISOString().split("T")[0],u=e.some(d=>d.date===c&&d.completed&&d.wordCount>0);this.streak.weeklyProgress[o]=u?1:0}}canUseGraceDay(){let s=this.plugin.settings.streakRule.grace;return this.streak.graceUsed<s}getStreak(){return this.streak}getDashboardStats(){let s=this.sessions.filter(r=>r.completed).sort((r,a)=>new Date(a.date).getTime()-new Date(r.date).getTime()).slice(0,7),t=this.sessions.filter(r=>r.completed).length,e=this.sessions.filter(r=>r.completed&&r.targetCount&&r.wordCount>=r.targetCount).length,n=t>0?e/t*100:0,i=this.getSessionsForWeek(new Date(Date.now()-7*24*60*60*1e3).toISOString().split("T")[0]).filter(r=>r.completed).length;return{todayWordCount:this.getTodaysWordCount(),weekWordCount:this.getWeekWordCount(),monthWordCount:this.getMonthWordCount(),streak:this.streak,sessionsThisWeek:i,completionRate:n,recentSessions:s}}async deleteSession(s){this.sessions=this.sessions.filter(t=>t.id!==s),await this.saveData()}async clearAllData(){this.sessions=[],this.streak=this.getDefaultStreak(),await this.saveData()}exportData(){return{sessions:this.sessions,streak:this.streak,exportDate:new Date().toISOString(),version:"1.0"}}async importData(s){s.sessions&&(this.sessions=[...this.sessions,...s.sessions]),s.streak&&s.streak.longest>this.streak.longest&&(this.streak.longest=s.streak.longest),await this.saveData()}};var f=require("obsidian"),W=class{constructor(s){this.currentSession=null;this.wordCountInterval=null;this.sessionStartContent=new Map;this.plugin=s}startSession(s,t,e){this.currentSession&&this.endSession();let n=`session-${Date.now()}`,i=new Date().toISOString().split("T")[0];this.currentSession={id:n,date:i,startTime:Date.now(),wordCount:0,templateUsed:t,files:[s],completed:!1,targetCount:e},this.captureInitialContent(s),this.startWordCountMonitoring(),this.plugin.settings.ui.notifications&&new f.Notice(`Writing session started! Target: ${e||"No limit"} words`),this.updateStatusBar()}async captureInitialContent(s){try{let t=this.plugin.app.vault.getAbstractFileByPath(s);if(t instanceof f.TFile){let e=await this.plugin.app.vault.read(t);this.sessionStartContent.set(s,e)}}catch(t){console.error("Failed to capture initial content:",t),this.sessionStartContent.set(s,"")}}startWordCountMonitoring(){this.wordCountInterval&&window.clearInterval(this.wordCountInterval),this.wordCountInterval=window.setInterval(()=>{this.updateSessionWordCount()},5e3),this.plugin.registerInterval(this.wordCountInterval)}async updateSessionWordCount(){if(!this.currentSession)return;let s=0;for(let t of this.currentSession.files){let e=this.plugin.app.vault.getAbstractFileByPath(t);if(e instanceof f.TFile)try{let n=await this.plugin.app.vault.read(e),i=this.sessionStartContent.get(t)||"",r=this.calculateNewWords(i,n);s+=r}catch(n){console.error(`Failed to read file ${t}:`,n)}}this.currentSession.wordCount=Math.max(0,s),this.updateStatusBar(),this.currentSession.targetCount&&this.currentSession.wordCount>=this.currentSession.targetCount&&!this.currentSession.completed&&this.completeSession()}calculateNewWords(s,t){let e=this.countWords(s),n=this.countWords(t);return Math.max(0,n-e)}countWords(s){return s.replace(/^---[\s\S]*?---\n?/,"").trim().split(/\s+/).filter(e=>e.length>0).length}completeSession(){if(this.currentSession){if(this.currentSession.completed=!0,this.currentSession.endTime=Date.now(),this.plugin.dataManager.addSession(this.currentSession),this.plugin.settings.continuousWriting.enabled){let s=Math.round((Date.now()-this.currentSession.startTime)/6e4),t=this.plugin.settings.continuousWriting.sessionDuration;s>=t&&(this.plugin.settings.continuousWriting.currentCount++,this.plugin.saveSettings(),this.plugin.settings.continuousWriting.currentCount>=this.plugin.settings.continuousWriting.targetSessions&&this.plugin.settings.ui.notifications&&new f.Notice(`\u{1F389} Amazing! You've completed ${this.plugin.settings.continuousWriting.targetSessions} continuous sessions!`,1e4))}if(this.plugin.settings.ui.notifications){let s=Math.round((Date.now()-this.currentSession.startTime)/6e4),t=`Great job! You wrote ${this.currentSession.wordCount} words in ${s} minutes.`;if(this.plugin.settings.continuousWriting.enabled){let e=this.plugin.settings.continuousWriting.currentCount,n=this.plugin.settings.continuousWriting.sessionDuration;s>=n?t+=` Continuous session ${e} completed! \u{1F525}`:t+=` (Need ${n}+ minutes for continuous progress)`}new f.Notice(t,5e3)}this.endSession()}}endSession(){this.currentSession&&!this.currentSession.completed&&(this.currentSession.endTime=Date.now(),this.plugin.dataManager.addSession(this.currentSession)),this.currentSession=null,this.sessionStartContent.clear(),this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),this.updateStatusBar()}pauseSession(){this.currentSession&&(this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),new f.Notice("Writing session paused"))}resumeSession(){this.currentSession&&!this.wordCountInterval&&(this.startWordCountMonitoring(),new f.Notice("Writing session resumed"))}getCurrentSession(){return this.currentSession}async addFileToCurrentSession(s){this.currentSession&&!this.currentSession.files.includes(s)&&(this.currentSession.files.push(s),await this.captureInitialContent(s))}setSessionTarget(s){this.currentSession&&(this.currentSession.targetCount=s,this.updateStatusBar())}updateStatusBar(){if(this.plugin.statusBarItem)if(this.currentSession){let s=this.currentSession.targetCount?` (${Math.min(100,Math.round(this.currentSession.wordCount/this.currentSession.targetCount*100))}%)`:"";this.plugin.statusBarItem.setText(`\u270D\uFE0F ${this.currentSession.wordCount}${this.currentSession.targetCount?`/${this.currentSession.targetCount}`:""} words${s}`)}else{let s=this.plugin.dataManager.getTodaysWordCount();this.plugin.statusBarItem.setText(`\u{1F4CA} ${s} words today`)}}getSessionStats(){if(!this.currentSession)return null;let s=Date.now()-this.currentSession.startTime,t=Math.round(s/6e4),e=t>0?Math.round(this.currentSession.wordCount/t):0;return{duration:t,wordCount:this.currentSession.wordCount,wpm:e,targetProgress:this.currentSession.targetCount?this.currentSession.wordCount/this.currentSession.targetCount*100:null}}async handleFileOpen(s){this.shouldAutoStartSession(s)?this.startSession(s.path):this.currentSession&&!this.currentSession.files.includes(s.path)&&await this.addFileToCurrentSession(s.path)}shouldAutoStartSession(s){return this.currentSession||!["md","txt"].includes(s.extension)?!1:["Journal","Blog","Writing","Draft"].some(n=>s.path.toLowerCase().includes(n.toLowerCase()))}cleanup(){this.endSession(),this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null)}};var N={reminders:[{id:"evening-default",days:[1,2,3,4,5,6,0],time:"21:00",secondShotMins:30,templateId:"daily-3lines",dnd:{start:"23:30",end:"07:30"},enabled:!0}],streakRule:{mode:"weekly",target:5,grace:1},locale:"en",dateFormat:"YYYY-MM-DD",defaultTitlePattern:"{{date}} - Writing Session",defaultTemplate:`# {{title}}

## Prompt
{{random_prompt}}

## Writing


---
*Written on {{weekday}} at {{time}}*`,continuousWriting:{enabled:!1,targetSessions:30,currentCount:0,sessionDuration:25},randomPrompts:{enabled:!1,mixWithLocal:!0,autoRefresh:!0},paths:{prompts:".writing-momentum/prompts.md"},ui:{showStatusBar:!0,showRibbonIcon:!0,notifications:!0},reminderTime:"21:00",showStatusBar:!0,showRibbonIcon:!0,enableNotifications:!0};var k=["What if gravity worked backwards for one day?","Describe a world where colors have sounds","What would you tell your younger self?","If you could have dinner with any historical figure, who would it be and why?","Describe your perfect day in vivid detail","What's the most important lesson you learned recently?","What are you most grateful for right now?","What challenge are you currently facing and how might you overcome it?","What small thing brought you joy today?","What would you do if you weren't afraid?","The old book opened itself to a page that wasn't there yesterday...","She found a letter addressed to her, dated 50 years in the future...","The last person on Earth sat alone in a room. There was a knock at the door...","Every morning, the same stranger waves at you from their window...","You wake up with the ability to hear everyone's thoughts, except one person...","Write about: Transformation","Explore the theme: Hidden connections","Focus on: Unexpected kindness","Consider: The space between words","Reflect on: Moments of change","Describe what you can see from where you're sitting","What sounds do you notice right now?","Write about a memory triggered by a smell","Describe a person you saw today without using their appearance","What's the story behind an object near you?","Write about a time you felt completely understood","Describe the feeling of coming home","What does hope look like to you?","Write about a moment of unexpected courage","Describe the weight of a secret","If time had a texture, what would it feel like?","What color is Monday?","Describe the personality of your favorite room","What would loneliness say if it could speak?","Write about the space between heartbeats"],A=["Mystery","Journey","Discovery","Connection","Solitude","Courage","Change","Memory","Hope","Wonder","Silence","Movement","Light","Shadow","Time","Growth","Healing","Adventure","Home","Freedom","Dreams","Truth","Beauty","Strength","Peace"],E=class extends p.Plugin{constructor(){super(...arguments);this.statusBarItem=null;this.currentSession=null;this.sessionHistory=[];this.wordCountInterval=null}async onload(){await this.loadSettings(),await this.loadSessionHistory(),this.dataManager=new T(this),this.templateEngine=new D(this),this.sessionManager=new W(this),this.reminderScheduler=new C(this),await this.dataManager.loadData(),await this.templateEngine.initialize(),this.randomPrompts=new b(this),this.settings.randomPrompts.enabled&&this.settings.randomPrompts.autoRefresh&&this.randomPrompts.fetchNetworkPrompts().catch(()=>{}),this.registerView(S,t=>new F(t,this)),this.settings.ui.showRibbonIcon&&this.addRibbonIcon("target","Writing Momentum",()=>{this.openDashboard()}),this.settings.ui.showStatusBar&&(this.statusBarItem=this.addStatusBarItem(),this.updateStatusBar()),this.addCommand({id:"open-dashboard",name:"Open Writing Dashboard",callback:()=>this.openDashboard()}),this.addCommand({id:"start-writing-session",name:"Start Writing Session",callback:()=>this.startQuickSession()}),this.addCommand({id:"complete-session",name:"Complete Writing Session",callback:()=>this.completeSession()}),this.addCommand({id:"quick-note",name:"Create Quick Note",callback:()=>this.createQuickNote()}),this.addCommand({id:"insert-writing-prompt",name:"Insert Writing Prompt",callback:()=>this.insertWritingPrompt()}),this.addCommand({id:"stop-all-timers",name:"Stop All Timers and Alarms",callback:()=>this.stopAllTimers()}),this.addSettingTab(new R(this.app,this)),this.registerEvent(this.app.workspace.on("file-open",t=>{t&&t.extension==="md"&&this.checkAutoStartSession(t)}))}onunload(){this.stopAllTimers()}stopAllTimers(){this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),this.app.workspace.getLeavesOfType(S).forEach(e=>{let n=e.view;n&&n.stopRealTimeUpdates&&n.stopRealTimeUpdates()}),this.currentSession&&this.currentSession.active&&this.completeSession()}async loadSettings(){this.settings=Object.assign({},N,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}refreshDashboard(){let{workspace:t}=this.app,e=t.getLeavesOfType(S);if(e.length>0){let i=e[0].view;i&&i.render&&i.render()}}async loadSessionHistory(){let t=await this.loadData();t!=null&&t.sessionHistory&&(this.sessionHistory=t.sessionHistory)}async saveSessionHistory(){let t=await this.loadData()||{};t.sessionHistory=this.sessionHistory,await this.saveData(t)}getRandomPrompt(){if(this.settings.randomPrompts.enabled&&this.randomPrompts){let t=this.randomPrompts.getRandomNetworkPrompt();if(t)return this.settings.randomPrompts.mixWithLocal&&Math.random()<.5?k[Math.floor(Math.random()*k.length)]:t}return k[Math.floor(Math.random()*k.length)]}getRandomKeyword(){return A[Math.floor(Math.random()*A.length)]}async openDashboard(){let{workspace:t}=this.app,e=t.getLeavesOfType(S)[0];if(!e){let n=t.getRightLeaf(!1);n&&(e=n,await e.setViewState({type:S,active:!0}))}e&&t.revealLeaf(e)}startQuickSession(){let t=this.app.workspace.getActiveFile();t&&(this.currentSession||(this.currentSession={id:`session-${Date.now()}`,startTime:Date.now(),wordCount:0,active:!0,paused:!1,totalPausedDuration:0,filePath:t.path,date:new Date().toISOString().split("T")[0],files:[t.path],completed:!1},this.startWordCountTracking(),this.settings.enableNotifications,this.updateStatusBar(),this.refreshDashboard()))}completeSession(){if(!this.currentSession)return;this.currentSession.active=!1,this.currentSession.endTime=Date.now();let t=Math.round((Date.now()-this.currentSession.startTime)/6e4);if(this.sessionHistory.push({...this.currentSession}),this.saveSessionHistory(),this.settings.continuousWriting.enabled){let e=this.settings.continuousWriting.sessionDuration;t>=e&&(this.settings.continuousWriting.currentCount++,this.saveSettings(),this.settings.continuousWriting.currentCount>=this.settings.continuousWriting.targetSessions&&this.settings.enableNotifications)}if(this.settings.enableNotifications){let e=`Session completed! ${this.currentSession.wordCount} words in ${t} minutes \u{1F389}`;if(this.settings.continuousWriting.enabled){let n=this.settings.continuousWriting.currentCount,i=this.settings.continuousWriting.sessionDuration;t>=i?e+=` Continuous session ${n} completed! \u{1F525}`:e+=` (Need ${i}+ minutes for continuous progress)`}}this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),this.currentSession=null,this.updateStatusBar(),this.refreshDashboard()}pauseSession(){!this.currentSession||!this.currentSession.active||this.currentSession.paused||(this.currentSession.paused=!0,this.currentSession.pausedTime=Date.now(),this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),this.settings.enableNotifications,this.updateStatusBar())}resumeSession(){!this.currentSession||!this.currentSession.active||!this.currentSession.paused||(this.currentSession.pausedTime&&(this.currentSession.totalPausedDuration+=Date.now()-this.currentSession.pausedTime),this.currentSession.paused=!1,this.currentSession.pausedTime=void 0,this.startWordCountTracking(),this.settings.enableNotifications,this.updateStatusBar())}startWordCountTracking(){this.wordCountInterval&&window.clearInterval(this.wordCountInterval),this.wordCountInterval=window.setInterval(()=>{this.updateWordCount()},5e3),this.registerInterval(this.wordCountInterval)}async updateWordCount(){if(!this.currentSession)return;let t=this.app.vault.getAbstractFileByPath(this.currentSession.filePath);if(t instanceof p.TFile)try{let e=await this.app.vault.read(t),n=this.countWords(e);this.currentSession.wordCount=n,this.updateStatusBar()}catch(e){}}countWords(t){return t.replace(/^---[\s\S]*?---\n?/,"").trim().split(/\s+/).filter(n=>n.length>0).length}updateStatusBar(){if(this.statusBarItem)if(this.currentSession&&this.currentSession.active){let t=Date.now()-this.currentSession.startTime-(this.currentSession.totalPausedDuration||0);this.currentSession.paused&&this.currentSession.pausedTime&&(t-=Date.now()-this.currentSession.pausedTime);let e=Math.round(t/6e4),n=this.currentSession.paused?" \u23F8\uFE0F":"";this.statusBarItem.setText(`\u270D\uFE0F ${this.currentSession.wordCount} words (${e}m)${n}`)}else this.statusBarItem.setText("\u{1F4DD} Ready to write")}checkAutoStartSession(t){}async createQuickNote(){let t=new Date,e=t.toISOString().split("T")[0],n=t.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!1}).replace(/:/g,"-"),i=`${e} Quick Note ${n}.md`,r=t.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"}),a=`# Quick Note - ${e}

What's on your mind?

---

Written at ${r}`;try{let o=i,l=1;for(;this.app.vault.getAbstractFileByPath(o);)o=`${i.replace(".md","")} (${l}).md`,l++;let c=await this.app.vault.create(o,a);await this.app.workspace.getLeaf().openFile(c),this.settings.enableNotifications,setTimeout(()=>this.startQuickSession(),100)}catch(o){new p.Notice(`Failed to create quick note: ${o.message}`)}}async createTemplateNoteAndStartSession(){let t=await this.showTemplateSelectionDialog();if(t)try{let e=this.processTemplate(t.title),n=this.processTemplate(t.template,e),i=this.sanitizeFileName(e)+".md",r=i,a=1;for(;this.app.vault.getAbstractFileByPath(r);)r=`${i.replace(".md","")} (${a}).md`,a++;let o=await this.app.vault.create(r,n);await this.app.workspace.getLeaf().openFile(o),setTimeout(()=>{this.startQuickSession()},100),this.settings.enableNotifications}catch(e){new p.Notice(`Failed to create note: ${e.message}`)}}processTemplate(t,e){let n=new Date,i=n.toISOString().split("T")[0],r=n.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"}),a=n.toLocaleDateString("en-US",{weekday:"long"}),o=this.getRandomPrompt(),l=t.replace(/\{\{date\}\}/g,i).replace(/\{\{time\}\}/g,r).replace(/\{\{weekday\}\}/g,a).replace(/\{\{vault\}\}/g,this.app.vault.getName()).replace(/\{\{random_prompt\}\}/g,o);return e?l=l.replace(/\{\{title\}\}/g,e):l=l.replace(/\{\{title\}\}/g,"Writing Session"),l}sanitizeFileName(t){return t.replace(/[<>:"/\\|?*]/g,"-").replace(/\s+/g," ").trim()}async showTemplateSelectionDialog(){return new Promise(t=>{let e=this.getAvailableTemplates(),n=document.createElement("div");n.className="template-modal-container";let i=document.createElement("div");i.className="template-selection-dialog";let r=i.createEl("h2",{text:"Choose Writing Template"}),a=i.createEl("p",{text:"Select a template to start your writing session:"}),o=i.createEl("div",{cls:"template-options"}),c=i.createEl("div",{cls:"template-dialog-buttons"}).createEl("button",{text:"Cancel",cls:"cancel-btn"});e.forEach((u,d)=>{let h=o.createEl("div",{cls:"template-option"}),m=h.createEl("h3",{text:u.name}),y=h.createEl("p",{text:u.description});h.addEventListener("click",()=>{document.body.removeChild(n),t(u)})}),c.addEventListener("click",()=>{document.body.removeChild(n),t(null)}),n.addEventListener("click",u=>{u.target===n&&(document.body.removeChild(n),t(null))}),n.appendChild(i),document.body.appendChild(n)})}getAvailableTemplates(){return[{name:"Daily Journal",description:"Structured daily reflection with prompts for events, feelings, and gratitude",title:"{{date}} - Daily Journal",template:`**\u{1F4DD} Today's Writing Session**
*Take a moment to reflect on your day and capture your thoughts.*

## Morning Reflection
{{random_prompt}}

## Today's Events
-
-
-

## Thoughts & Feelings


## Gratitude
1.
2.
3.

---
*Journal entry for {{weekday}}, {{date}} at {{time}}*`},{name:"Creative Writing",description:"Free-form creative writing with inspiration prompt",title:"{{date}} - Creative Writing",template:`**\u2728 Creative Writing Session**
*Let your imagination flow and create something beautiful.*

## Writing Prompt
{{random_prompt}}

## Your Story


---
*Creative session on {{weekday}} at {{time}}*`},{name:"Quick Notes",description:"Fast idea capture and organization",title:"{{time}} - Quick Note",template:`**\u{1F4A1} Quick Idea Capture**
*Capture your thoughts quickly and organize them for later.*

## Main Idea
{{random_prompt}}

## Details


## Next Steps
- [ ]
- [ ]

---
*Note taken {{weekday}} at {{time}}*`},{name:"Project Planning",description:"Structured project planning and task organization",title:"{{date}} - Project Planning",template:`**\u{1F3AF} Project Planning Session**
*Plan your project systematically and set clear goals.*

## Project Goal
{{random_prompt}}

## Overview
**Start Date:** {{date}}
**Status:** Planning

## Tasks
- [ ] Task 1
- [ ] Task 2
- [ ] Task 3

## Timeline


## Resources


---
*Project planned on {{weekday}}, {{date}} at {{time}}*`},{name:"Free Writing",description:"Unstructured writing for stream of consciousness",title:"{{date}} - Free Writing",template:`**\u{1F30A} Free Writing Session**
*Write without stopping, let your thoughts flow naturally.*

## Starting Thought
{{random_prompt}}

## Stream of Consciousness
Write continuously for your target time. Don't worry about grammar, structure, or making sense. Just let your thoughts flow onto the page.




---
*Free writing session {{weekday}} at {{time}}*`}]}async insertWritingPrompt(){let t=this.app.workspace.getActiveViewOfType(p.MarkdownView);if(!t){new p.Notice("No active note to insert prompt into");return}let e=this.getRandomPrompt(),n=[this.getRandomKeyword(),this.getRandomKeyword(),this.getRandomKeyword()],i=`**Writing Prompt:** ${e}

**Keywords:** ${n.join(", ")}

---

`,r=t.editor,a=r.getCursor();r.replaceRange(i,a);let o=i.split(`
`).length;r.setCursor(a.line+o-1,0),this.settings.enableNotifications}},R=class extends p.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Writing Momentum Settings"}),t.createEl("h3",{text:"Continuous Writing"});let e=new p.Setting(t).setName("Enable continuous writing mode").setDesc("Track consecutive writing sessions for extended focus periods").addToggle(c=>c.setValue(this.plugin.settings.continuousWriting.enabled).onChange(async u=>{this.plugin.settings.continuousWriting.enabled=u,await this.plugin.saveSettings(),this.display(),this.refreshDashboard()}));if(this.plugin.settings.continuousWriting.enabled){new p.Setting(t).setName("Target sessions").setDesc("Number of consecutive sessions to complete (e.g., 30 sessions)").addSlider(w=>w.setLimits(5,100,5).setValue(this.plugin.settings.continuousWriting.targetSessions).setDynamicTooltip().onChange(async v=>{this.plugin.settings.continuousWriting.targetSessions=v,await this.plugin.saveSettings()})),new p.Setting(t).setName("Session duration").setDesc("Minutes per continuous writing session").addSlider(w=>w.setLimits(10,60,5).setValue(this.plugin.settings.continuousWriting.sessionDuration).setDynamicTooltip().onChange(async v=>{this.plugin.settings.continuousWriting.sessionDuration=v,await this.plugin.saveSettings()})),new p.Setting(t).setName("Reset continuous writing counter").setDesc("Reset your current progress and start over").addButton(w=>w.setButtonText("Reset Counter").setClass("mod-warning").onClick(async()=>{this.plugin.settings.continuousWriting.currentCount=0,await this.plugin.saveSettings(),this.display(),this.refreshDashboard()}));let c=t.createDiv("continuous-writing-progress");c.createEl("h4",{text:"Current Progress"});let u=this.plugin.settings.continuousWriting.currentCount,d=this.plugin.settings.continuousWriting.targetSessions,h=c.createEl("p",{text:`${u} / ${d} sessions completed (${Math.round(u/d*100)}%)`,cls:"progress-text"}),y=c.createEl("div",{cls:"progress-bar-container"}).createEl("div",{cls:"progress-bar-fill"});y.style.width=`${Math.min(u/d*100,100)}%`}t.createEl("h3",{text:"General Settings"}),new p.Setting(t).setName("Reminder time").setDesc("Daily writing reminder (HH:MM format)").addText(c=>c.setPlaceholder("21:00").setValue(this.plugin.settings.reminderTime||"21:00").onChange(async u=>{this.plugin.settings.reminderTime=u,await this.plugin.saveSettings()})),new p.Setting(t).setName("Show status bar").setDesc("Display writing progress in status bar").addToggle(c=>c.setValue(this.plugin.settings.showStatusBar||!1).onChange(async u=>{this.plugin.settings.showStatusBar=u,await this.plugin.saveSettings(),u&&!this.plugin.statusBarItem?(this.plugin.statusBarItem=this.plugin.addStatusBarItem(),this.plugin.updateStatusBar()):!u&&this.plugin.statusBarItem&&(this.plugin.statusBarItem.remove(),this.plugin.statusBarItem=null)})),new p.Setting(t).setName("Show ribbon icon").setDesc("Display plugin icon in left ribbon").addToggle(c=>c.setValue(this.plugin.settings.showRibbonIcon||!1).onChange(async u=>{this.plugin.settings.showRibbonIcon=u,await this.plugin.saveSettings()})),new p.Setting(t).setName("Enable notifications").setDesc("Show notifications for session events").addToggle(c=>c.setValue(this.plugin.settings.enableNotifications||!1).onChange(async u=>{this.plugin.settings.enableNotifications=u,await this.plugin.saveSettings()})),t.createEl("h3",{text:"Random Prompts"});let n=new p.Setting(t).setName("Enable random prompts").setDesc("Fetch writing prompts from online sources (requires internet connection)").addToggle(c=>c.setValue(this.plugin.settings.randomPrompts.enabled).onChange(async u=>{this.plugin.settings.randomPrompts.enabled=u,await this.plugin.saveSettings(),this.display(),u&&this.plugin.randomPrompts&&await this.plugin.randomPrompts.fetchNetworkPrompts()}));if(this.plugin.settings.randomPrompts.enabled){new p.Setting(t).setName("Mix with local prompts").setDesc("Randomly mix random prompts with built-in prompts for variety").addToggle(d=>d.setValue(this.plugin.settings.randomPrompts.mixWithLocal).onChange(async h=>{this.plugin.settings.randomPrompts.mixWithLocal=h,await this.plugin.saveSettings()})),new p.Setting(t).setName("Auto-refresh prompts").setDesc("Automatically fetch new prompts daily (cached for offline use)").addToggle(d=>d.setValue(this.plugin.settings.randomPrompts.autoRefresh).onChange(async h=>{this.plugin.settings.randomPrompts.autoRefresh=h,await this.plugin.saveSettings()}));let c=new p.Setting(t).setName("Prompt cache status").setDesc("View and manage cached random prompts"),u=c.controlEl.createEl("button",{text:"Refresh Now",cls:"mod-cta"});u.onclick=async()=>{u.disabled=!0,u.textContent="Refreshing...";try{await this.plugin.randomPrompts.refreshPrompts()?new p.Notice("Random prompts refreshed successfully!"):new p.Notice("Failed to refresh prompts. Check your internet connection.")}catch(d){new p.Notice("Error refreshing prompts: "+d.message)}u.disabled=!1,u.textContent="Refresh Now",this.updatePromptStatus(c)},this.updatePromptStatus(c)}t.createEl("h3",{text:"Template Presets"});let i=[{name:"Daily Journal",title:"{{date}} - Daily Journal",template:`# Daily Journal - {{date}}

## Morning Reflection
{{random_prompt}}

## Today's Events
- 
- 
- 

## Thoughts & Feelings


## Gratitude
1. 
2. 
3. 

---
*Written on {{weekday}} at {{time}}*`},{name:"Quick Notes",title:"{{time}} - Quick Note",template:`# Quick Note

## Idea
{{random_prompt}}

## Details


## Next Steps
- [ ] 
- [ ] 

---
*{{weekday}} {{time}}*`},{name:"Project Planning",title:"Project - {{title}}",template:`# Project: {{title}}

## Goal
{{random_prompt}}

## Overview
**Start Date:** {{date}}
**Status:** Planning

## Tasks
- [ ] Task 1
- [ ] Task 2
- [ ] Task 3

## Timeline


## Resources


---
*Created {{weekday}}, {{date}} at {{time}}*`}],r,a;new p.Setting(t).setName("Template preset").setDesc("Choose a template to customize").addDropdown(c=>{c.addOption("custom","Custom Template"),i.forEach((d,h)=>{c.addOption(h.toString(),d.name)});let u=i.find(d=>d.title===this.plugin.settings.defaultTitlePattern&&d.template===this.plugin.settings.defaultTemplate);c.setValue(u?i.indexOf(u).toString():"custom"),c.onChange(d=>{if(d==="custom")return;let h=i[parseInt(d)];this.plugin.settings.defaultTitlePattern=h.title,this.plugin.settings.defaultTemplate=h.template,this.plugin.saveSettings(),this.display()})}),t.createEl("br"),t.createEl("h3",{text:"Page Title Pattern"});let o=t.createDiv("title-pattern-container");o.createEl("p",{text:"Pattern for new page titles. Use variables like {{date}}, {{time}}, {{title}}, etc.",cls:"title-pattern-description"}),r=o.createEl("input",{cls:"title-pattern-editor",attr:{type:"text",placeholder:"{{date}} - Writing Session"}}),r.value=this.plugin.settings.defaultTitlePattern||"{{date}} - Writing Session",r.addEventListener("input",async()=>{this.plugin.settings.defaultTitlePattern=r.value,await this.plugin.saveSettings()}),t.createEl("h3",{text:"Template Content Editor"});let l=t.createDiv("template-content-container");l.createEl("p",{text:"Edit your template content below. Use variables like {{date}}, {{time}}, {{random_prompt}}, etc.",cls:"template-content-description"}),a=l.createEl("textarea",{cls:"template-content-editor",attr:{placeholder:`# {{title}}

## Prompt
{{random_prompt}}

## Writing


---
*Written on {{weekday}} at {{time}}*`}}),a.value=this.plugin.settings.defaultTemplate||`# {{title}}

## Prompt
{{random_prompt}}

## Writing


---
*Written on {{weekday}} at {{time}}*`,a.addEventListener("input",async()=>{this.plugin.settings.defaultTemplate=a.value,await this.plugin.saveSettings()})}refreshDashboard(){let{workspace:t}=this.app,e=t.getLeavesOfType(S);if(e.length>0){let i=e[0].view;i&&i.render&&i.render()}}updatePromptStatus(t){if(!this.plugin.randomPrompts)return;let e=this.plugin.randomPrompts.getCachedPromptsCount(),n=this.plugin.randomPrompts.getLastFetchTime(),i=`${e} prompts cached`;if(n){let r=this.getTimeAgo(n);i+=` (last updated ${r})`}else i+=" (never fetched)";t.setDesc(i)}getTimeAgo(t){let n=new Date().getTime()-t.getTime(),i=Math.floor(n/(1e3*60)),r=Math.floor(i/60),a=Math.floor(r/24);return i<1?"just now":i<60?`${i} minute${i!==1?"s":""} ago`:r<24?`${r} hour${r!==1?"s":""} ago`:`${a} day${a!==1?"s":""} ago`}},S="writing-momentum-dashboard",F=class extends p.ItemView{constructor(t,e){super(t);this.updateInterval=null;this.plugin=e}getViewType(){return S}getDisplayText(){return"Writing Dashboard"}getIcon(){return"target"}async onOpen(){this.render(),this.startRealTimeUpdates()}async onClose(){this.stopRealTimeUpdates()}startRealTimeUpdates(){this.updateInterval=window.setInterval(()=>{this.updateRealTimeElements()},1e3),this.plugin.registerInterval(this.updateInterval)}stopRealTimeUpdates(){this.updateInterval&&(window.clearInterval(this.updateInterval),this.updateInterval=null)}updateRealTimeElements(){let t=this.containerEl.querySelector(".session-timer");if(t&&this.plugin.currentSession&&this.plugin.currentSession.active){let n=this.plugin.currentSession,i=Date.now()-n.startTime-(n.totalPausedDuration||0);n.paused&&n.pausedTime&&(i-=Date.now()-n.pausedTime);let r=Math.floor(i/36e5),a=Math.floor(i%36e5/6e4),o=Math.floor(i%6e4/1e3),l=r>0?`${r}:${a.toString().padStart(2,"0")}:${o.toString().padStart(2,"0")}`:`${a}:${o.toString().padStart(2,"0")}`;t.textContent=l}let e=this.containerEl.querySelector(".session-words");e&&this.plugin.currentSession&&this.plugin.currentSession.active&&(e.textContent=this.plugin.currentSession.wordCount.toString())}render(){let t=this.containerEl.children[1];t.empty(),t.addClass("writing-momentum-dashboard"),t.createEl("div",{cls:"dashboard-header"}).createEl("h2",{text:"Writing Dashboard",cls:"dashboard-title"}),this.renderCurrentSession(t),this.plugin.currentSession&&this.plugin.currentSession.active||(this.renderContinuousWriting(t),this.plugin.settings.continuousWriting.enabled||this.renderWritingMode(t)),this.renderWritingVolumeChart(t)}renderCurrentSession(t){var n;let e=t.createEl("div",{cls:"dashboard-section"});if(this.plugin.currentSession&&this.plugin.currentSession.active){let i=this.plugin.currentSession,r=Date.now()-i.startTime-(i.totalPausedDuration||0);i.paused&&i.pausedTime&&(r-=Date.now()-i.pausedTime);let a=Math.round(r/6e4),o=e.createEl("h3",{text:i.paused?"\u{1F3AF} Current Session (Paused)":"\u{1F3AF} Current Session"});i.paused&&o.addClass("paused-session");let l=e.createEl("div",{cls:"session-stats-grid"}),c=l.createEl("div",{cls:"stat-card"});c.createEl("span",{text:"\u{1F4DD}",cls:"stat-icon"}),c.createEl("span",{text:i.wordCount.toString(),cls:"stat-value session-words"}),c.createEl("span",{text:"Words",cls:"stat-label"});let u=l.createEl("div",{cls:"stat-card"});u.createEl("span",{text:"\u23F1\uFE0F",cls:"stat-icon"});let d=Math.floor(r/36e5),h=Math.floor(r%36e5/6e4),m=Math.floor(r%6e4/1e3),y=d>0?`${d}:${h.toString().padStart(2,"0")}:${m.toString().padStart(2,"0")}`:`${h}:${m.toString().padStart(2,"0")}`;u.createEl("span",{text:y,cls:"stat-value session-timer"}),u.createEl("span",{text:"Time",cls:"stat-label"}),l.createEl("div",{cls:"current-file"}).createEl("span",{text:"\u{1F4C4} "+(((n=i.filePath)==null?void 0:n.split("/").pop())||"Unknown file")});let v=e.createEl("div",{cls:"writing-inspiration"});this.renderWritingInspiration(v);let $=e.createEl("div",{cls:"session-actions"}).createEl("button",{text:"\u2705 Complete Session",cls:"session-btn complete-btn"});$.onclick=()=>{this.plugin.completeSession(),this.render()}}else e.createEl("p",{text:"\u{1F4A4} No active session. Open a markdown file and click the ribbon icon to start!",cls:"no-session-message"})}renderWritingInspiration(t){let e=t.createEl("div",{cls:"prompt-card"}),n=e.createEl("div",{cls:"prompt-header"});n.createEl("span",{text:"\u2728 Writing Inspiration",cls:"prompt-title"});let i=n.createEl("button",{text:"\u{1F3B2}",cls:"prompt-refresh-btn",attr:{title:"Get new inspiration"}}),r=e.createEl("div",{cls:"prompt-text"});r.setText(this.plugin.getRandomPrompt());let a=e.createEl("div",{cls:"keyword-section"});a.createEl("span",{text:"Keywords: ",cls:"keyword-label"});let o=a.createEl("span",{cls:"keywords"});for(let c=0;c<3;c++){let u=o.createEl("span",{text:this.plugin.getRandomKeyword(),cls:"keyword-tag"});c<2&&o.createEl("span",{text:" \u2022 ",cls:"keyword-separator"})}let l=e.createEl("button",{text:"\u{1F4CB} Copy to Clipboard",cls:"copy-prompt-btn"});i.onclick=()=>{r.setText(this.plugin.getRandomPrompt()),o.empty();for(let c=0;c<3;c++){let u=o.createEl("span",{text:this.plugin.getRandomKeyword(),cls:"keyword-tag"});c<2&&o.createEl("span",{text:" \u2022 ",cls:"keyword-separator"})}},l.onclick=async()=>{let c=r.textContent||"",u=Array.from(o.querySelectorAll(".keyword-tag")).map(h=>h.textContent).join(", "),d=`${c}

Keywords: ${u}`;try{await navigator.clipboard.writeText(d),l.setText("\u2705 Copied!"),setTimeout(()=>{l.setText("\u{1F4CB} Copy to Clipboard")},2e3)}catch(h){console.error("Failed to copy to clipboard:",h);let m=document.createElement("textarea");m.value=d,document.body.appendChild(m),m.select(),document.execCommand("copy"),document.body.removeChild(m),l.setText("\u2705 Copied!"),setTimeout(()=>{l.setText("\u{1F4CB} Copy to Clipboard")},2e3)}}}renderWritingMode(t){let e=t.createEl("div",{cls:"dashboard-section"});e.createEl("h3",{text:"Writing Mode"});let i=e.createEl("div",{cls:"action-buttons"}).createEl("button",{text:"\u{1F680} Start Session",cls:"action-btn start-session-btn"});i.onclick=async()=>{await this.plugin.createTemplateNoteAndStartSession()}}renderContinuousWriting(t){if(!this.plugin.settings.continuousWriting.enabled)return;let e=t.createEl("div",{cls:"dashboard-section continuous-writing"});e.createEl("h3",{text:"Continuous Writing Mode"});let n=this.plugin.settings.continuousWriting.currentCount,i=this.plugin.settings.continuousWriting.targetSessions,r=this.plugin.settings.continuousWriting.sessionDuration,a=e.createEl("div",{cls:"continuous-progress-overview"}),o=a.createEl("div",{cls:"continuous-progress-text"});o.createEl("span",{text:`${n} / ${i}`,cls:"continuous-count"}),o.createEl("span",{text:" sessions completed",cls:"continuous-label"});let l=Math.round(n/i*100);o.createEl("span",{text:` (${l}%)`,cls:"continuous-percentage"});let u=a.createEl("div",{cls:"continuous-progress-bar"}).createEl("div",{cls:"continuous-progress-fill"}),d=Math.min(Math.round(l/5)*5,100);u.addClass(`width-${d}`),e.createEl("div",{cls:"continuous-session-info"}).createEl("p",{text:`Target: ${r} minutes per session`,cls:"session-duration-info"});let m=e.createEl("div",{cls:"continuous-actions"}),y=m.createEl("button",{text:"\u{1F680} Start Continuous Session",cls:"action-btn continuous-start-btn"});if(y.onclick=async()=>{await this.plugin.createTemplateNoteAndStartSession()},n>0){let w=m.createEl("button",{text:"\u{1F504} Reset Progress",cls:"action-btn continuous-reset-btn"});w.onclick=async()=>{this.plugin.settings.continuousWriting.currentCount=0,await this.plugin.saveSettings(),this.render()}}if(n>=i){let w=e.createEl("div",{cls:"continuous-achievement"});w.createEl("div",{text:"\u{1F389}",cls:"achievement-icon"}),w.createEl("div",{text:`Congratulations! You've completed ${i} continuous sessions!`,cls:"achievement-text"})}}renderWritingVolumeChart(t){let e=t.createEl("div",{cls:"dashboard-section"});e.createEl("h3",{text:"Writing Volume"});let n=e.createEl("div",{cls:"chart-container"});this.renderWeeklyChart(n),this.renderMonthlyChart(n),this.renderVolumeTotals(n)}renderWeeklyChart(t){let e=t.createEl("div",{cls:"weekly-chart"});e.createEl("h4",{text:"Last 7 Days"});let n=e.createEl("div",{cls:"bar-chart"}),i=this.getWeeklyData(),r=Math.max(...i.map(a=>a.words),100);i.forEach((a,o)=>{let l=n.createEl("div",{cls:"bar-container"});l.createEl("div",{cls:"bar-label"}).setText(a.label);let u=l.createEl("div",{cls:"bar"}),d=Math.max(a.words/r*100,2),h=Math.min(Math.round(d/5)*5,100);u.addClass(`bar-height-${h}`),u.addClass(a.words>0?"has-data":"no-data"),u.title=`${a.words} words`,a.words>0&&l.createEl("div",{cls:"word-count"}).setText(a.words.toString())})}renderMonthlyChart(t){let e=t.createEl("div",{cls:"monthly-chart"});e.createEl("h4",{text:"Last 30 Days"});let n=e.createEl("div",{cls:"line-chart"}),i=this.getMonthlyData(),r=Math.max(...i.map(o=>o.words),100),a=document.createElementNS("http://www.w3.org/2000/svg","svg");a.setAttribute("class","chart-svg"),a.setAttribute("width","100%"),a.setAttribute("height","120"),a.setAttribute("viewBox","0 0 400 120"),this.createSVGPath(a,i,r),this.createSVGDots(a,i,r),n.appendChild(a)}renderVolumeTotals(t){let e=t.createEl("div",{cls:"volume-totals"}),n=this.getWeeklyData().reduce((o,l)=>o+l.words,0),i=this.getMonthlyData().reduce((o,l)=>o+l.words,0),r=e.createEl("div",{cls:"volume-card"});r.createEl("div",{text:n.toString(),cls:"volume-number"}),r.createEl("div",{text:"Words This Week",cls:"volume-label"});let a=e.createEl("div",{cls:"volume-card"});a.createEl("div",{text:i.toString(),cls:"volume-number"}),a.createEl("div",{text:"Words This Month",cls:"volume-label"})}createSVGPath(t,e,n){let i="";e.forEach((a,o)=>{let l=o/(e.length-1)*380+10,c=100-a.words/n*80;i+=(o===0?"M":"L")+` ${l} ${c}`});let r=document.createElementNS("http://www.w3.org/2000/svg","path");r.setAttribute("d",i),r.setAttribute("fill","none"),r.setAttribute("stroke","var(--interactive-accent)"),r.setAttribute("stroke-width","2"),r.setAttribute("style","filter: drop-shadow(0 1px 3px rgba(0, 0, 0, 0.1));"),t.appendChild(r)}createSVGDots(t,e,n){e.forEach((i,r)=>{if(i.words>0){let a=r/(e.length-1)*380+10,o=100-i.words/n*80,l=document.createElementNS("http://www.w3.org/2000/svg","circle");l.setAttribute("cx",a.toString()),l.setAttribute("cy",o.toString()),l.setAttribute("r","3"),l.setAttribute("fill","var(--interactive-accent)"),l.setAttribute("style","cursor: pointer;");let c=document.createElementNS("http://www.w3.org/2000/svg","title");c.textContent=`${i.date}: ${i.words} words`,l.appendChild(c),t.appendChild(l)}})}getWeeklyData(){let t=[],e=new Date;for(let n=6;n>=0;n--){let i=new Date(e);i.setDate(e.getDate()-n);let r=i.toISOString().split("T")[0],a=this.plugin.sessionHistory.filter(o=>o.date===r&&o.endTime).reduce((o,l)=>o+l.wordCount,0);t.push({date:r,label:i.toLocaleDateString("en-US",{weekday:"short"}),words:a})}return t}getMonthlyData(){let t=[],e=new Date;for(let n=29;n>=0;n--){let i=new Date(e);i.setDate(e.getDate()-n);let r=i.toISOString().split("T")[0],a=this.plugin.sessionHistory.filter(o=>o.date===r&&o.endTime).reduce((o,l)=>o+l.wordCount,0);t.push({date:r,words:a})}return t}refresh(){this.render()}};
