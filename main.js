/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var P=(u,e)=>{for(var t in e)b(u,t,{get:e[t],enumerable:!0})},I=(u,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of x(e))!M.call(u,n)&&n!==t&&b(u,n,{get:()=>e[n],enumerable:!(s=E(e,n))||s.enumerable});return u};var R=u=>I(b({},"__esModule",{value:!0}),u);var F={};P(F,{default:()=>v});module.exports=R(F);var l=require("obsidian");var D=require("obsidian"),w=class{constructor(e){this.scheduledReminders=new Map;this.snoozeQueue=new Map;this.plugin=e}start(){this.scheduleAllReminders(),this.plugin.registerInterval(window.setInterval(()=>this.checkReminders(),6e4))}stop(){this.scheduledReminders.clear(),this.snoozeQueue.clear()}scheduleAllReminders(){let e=this.plugin.settings.reminders.filter(t=>t.enabled);for(let t of e)this.scheduleReminder(t)}scheduleReminder(e){let t=new Date,s=t.getDay();if(!e.days.includes(s))return;let[n,i]=e.time.split(":").map(Number),a=new Date;if(a.setHours(n,i,0,0),a<=t&&a.setDate(a.getDate()+1),this.isInDoNotDisturbPeriod(e))return;let r=window.setTimeout(()=>{this.triggerReminder(e)},a.getTime()-t.getTime());this.scheduledReminders.set(e.id,r)}isInDoNotDisturbPeriod(e){if(!e.dnd)return!1;let t=new Date,s=t.getHours()*60+t.getMinutes(),[n,i]=e.dnd.start.split(":").map(Number),[a,r]=e.dnd.end.split(":").map(Number),d=n*60+i,o=a*60+r;return d<=o?s>=d&&s<=o:s>=d||s<=o}async triggerReminder(e){let t="Time to write! Click to start your writing session.",s=new D.Notice(t,0),n=s.noticeEl;n.style.cursor="pointer",n.onclick=()=>{s.hide(),this.handleReminderClick(e)};let i=n.createEl("button",{text:"Snooze 10m",cls:"snooze-btn"});i.onclick=a=>{a.stopPropagation(),this.snoozeReminder(e.id,10),s.hide()},e.secondShotMins&&setTimeout(()=>{this.hasWrittenToday()||this.triggerReminder(e)},e.secondShotMins*60*1e3)}async handleReminderClick(e){try{e.templateId?await this.plugin.templateEngine.createNoteFromTemplate(e.templateId):await this.plugin.createQuickNote()}catch(t){console.error("Failed to create note from reminder:",t),new D.Notice("Failed to create writing note. Please try again.")}}snoozeReminder(e,t){let s=Date.now()+t*60*1e3;this.snoozeQueue.set(e,s),setTimeout(()=>{let n=this.plugin.settings.reminders.find(i=>i.id===e);n&&this.triggerReminder(n),this.snoozeQueue.delete(e)},t*60*1e3)}checkReminders(){}hasWrittenToday(){let e=new Date().toISOString().split("T")[0];return this.plugin.dataManager.getTodaysSessions().some(s=>s.completed&&s.wordCount>0)}reschedule(){this.stop(),this.start()}};var m=require("obsidian"),S=class{constructor(e){this.templates=new Map;this.prompts=[];this.plugin=e}async initialize(){await this.loadTemplates(),await this.loadPrompts()}async loadTemplates(){let e=this.plugin.settings.paths.templates,t=this.plugin.app.vault.getAbstractFileByPath(e);if(!(t instanceof m.TFolder)){await this.createDefaultTemplates();return}let s=t.children.filter(n=>n instanceof m.TFile&&n.extension==="md");for(let n of s)try{let i=await this.plugin.app.vault.read(n),a=this.parseTemplate(n,i);this.templates.set(a.id,a)}catch(i){console.error(`Failed to load template ${n.path}:`,i)}}parseTemplate(e,t){let s=this.extractFrontmatter(t),n=t.replace(/^---[\s\S]*?---\n/,""),i=this.extractVariables(n);return{id:e.basename,name:s.name||e.basename,content:n,variables:i,category:s.category||"custom",description:s.description,filePaths:s.filePaths}}extractFrontmatter(e){let t=e.match(/^---\n([\s\S]*?)\n---/);if(!t)return{};let s=t[1].split(`
`),n={};for(let i of s){let[a,...r]=i.split(":");a&&r.length>0&&(n[a.trim()]=r.join(":").trim())}return n}extractVariables(e){let t=/\{\{([^}]+)\}\}/g,s=new Set,n;for(;(n=t.exec(e))!==null;)s.add(n[1].trim());return Array.from(s)}async createDefaultTemplates(){let e=this.plugin.settings.paths.templates;await this.plugin.app.vault.createFolder(e).catch(()=>{});let t=[{filename:"daily-3lines.md",content:`---
name: Daily 3 Lines
category: daily
description: Simple 3-line daily journal
filePaths:
  pattern: "{{date}} Daily.md"
  folder: "Journal"
---
{{random_prompt}}

- Line 1
- Line 2  
- Line 3`},{filename:"blog-outline.md",content:`---
name: Blog Outline
category: blog
description: Blog post structure template
filePaths:
  pattern: "Blog-{{date}}-{{slug}}.md"
  folder: "Blog"
---
# {{title}}

## Introduction
{{random_prompt}}

## Body
- Key Idea 1
- Key Idea 2

## Conclusion
- Summary & Next action`},{filename:"fiction-scene.md",content:`---
name: Fiction Scene
category: fiction
description: Fiction writing scene template
filePaths:
  pattern: "Scene-{{date}}.md"
  folder: "Writing/Scenes"
---
## Scene Goal
{{random_prompt}}

## Characters
- Protagonist:
- Other:

## Conflict/Turn
- Obstacle:
- Twist:

## Closing Image`}];for(let s of t){let n=`${e}/${s.filename}`;try{await this.plugin.app.vault.create(n,s.content)}catch(i){}}await this.loadTemplates()}async loadPrompts(){let e=this.plugin.settings.paths.prompts,t=this.plugin.app.vault.getAbstractFileByPath(e);if(!(t instanceof m.TFile)){await this.createDefaultPrompts();return}try{let s=await this.plugin.app.vault.read(t);this.prompts=this.parsePrompts(s)}catch(s){console.error("Failed to load prompts:",s),await this.createDefaultPrompts()}}parsePrompts(e){let t=e.split(`
`),s=[];for(let n of t){let i=n.trim();i.startsWith("- ")||i.startsWith("* ")?s.push(i.substring(2)):i&&!i.startsWith("#")&&s.push(i)}return s.filter(n=>n.length>0)}async createDefaultPrompts(){let e=this.plugin.settings.paths.prompts,t=`# Writing Prompts

- What was the most meaningful moment today?
- What did I learn today?
- Express your current feeling in one word.
- What am I grateful for right now?
- What challenge did I overcome today?
- What would I tell my past self?
- What's one thing I want to remember about today?
- How did I grow today?
- What made me smile today?
- What am I looking forward to tomorrow?
- Describe today in exactly three words.
- What surprised me today?
- What would I change about today?
- What small victory can I celebrate?
- What's one thing I did well today?`;try{await this.plugin.app.vault.create(e,t),await this.loadPrompts()}catch(s){console.error("Failed to create default prompts:",s)}}async createNoteFromTemplate(e,t){var o;let s=this.templates.get(e);if(!s)throw new Error(`Template '${e}' not found`);let n=this.buildVariables(t),i=this.processTemplate(s.content,n),a=this.generateFileName(s,n),r=((o=s.filePaths)==null?void 0:o.folder)||"";r&&await this.plugin.app.vault.createFolder(r).catch(()=>{});let d=r?`${r}/${a}`:a;try{let c=await this.plugin.app.vault.create(d,i);return await this.plugin.app.workspace.getLeaf().openFile(c),this.plugin.sessionManager.startSession(c.path,e),c}catch(c){if(c.message.includes("already exists")){let p=this.plugin.app.vault.getAbstractFileByPath(d);return await this.plugin.app.workspace.getLeaf().openFile(p),p}throw c}}buildVariables(e){let t=new Date,s=[{name:"date",value:this.formatDate(t)},{name:"time",value:t.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"})},{name:"weekday",value:t.toLocaleDateString("en-US",{weekday:"long"})},{name:"vault",value:this.plugin.app.vault.getName()},{name:"random_prompt",value:()=>this.getRandomPrompt()}];if(e)for(let[n,i]of Object.entries(e))s.push({name:n,value:i});return s}processTemplate(e,t){let s=e;for(let n of t){let i=typeof n.value=="function"?n.value():n.value,a=new RegExp(`\\{\\{\\s*${n.name}\\s*\\}\\}`,"g");s=s.replace(a,i)}return s}generateFileName(e,t){var n,i;if(!((n=e.filePaths)!=null&&n.pattern))return`${((i=t.find(r=>r.name==="date"))==null?void 0:i.value)||"untitled"}-${e.id}.md`;let s=e.filePaths.pattern;for(let a of t){let r=typeof a.value=="function"?a.value():a.value,d=new RegExp(`\\{\\{\\s*${a.name}\\s*\\}\\}`,"g");s=s.replace(d,r)}return s}formatDate(e){let t=this.plugin.settings.dateFormat,s=e.getFullYear(),n=String(e.getMonth()+1).padStart(2,"0"),i=String(e.getDate()).padStart(2,"0");return t.replace("YYYY",s.toString()).replace("MM",n).replace("DD",i)}getRandomPrompt(){if(this.prompts.length===0)return"What's on your mind today?";let e=Math.floor(Math.random()*this.prompts.length);return this.prompts[e]}getTemplate(e){return this.templates.get(e)}getAllTemplates(){return Array.from(this.templates.values())}async reloadTemplates(){this.templates.clear(),await this.loadTemplates()}async reloadPrompts(){await this.loadPrompts()}};var f=class{constructor(e){this.sessions=[];this.streak={current:0,longest:0,lastWritingDay:"",graceUsed:0,weeklyProgress:[]};this.plugin=e}async loadData(){let e=await this.plugin.loadData();e!=null&&e.writingData&&(this.sessions=e.writingData.sessions||[],this.streak=e.writingData.streak||this.getDefaultStreak())}async saveData(){let e=await this.plugin.loadData()||{};e.writingData={sessions:this.sessions,streak:this.streak,lastUpdated:new Date().toISOString()},await this.plugin.saveData(e)}getDefaultStreak(){return{current:0,longest:0,lastWritingDay:"",graceUsed:0,weeklyProgress:new Array(7).fill(0)}}async addSession(e){this.sessions.push(e),e.completed&&e.wordCount>0&&this.updateStreak(e.date),await this.saveData()}async updateSession(e,t){let s=this.sessions.findIndex(n=>n.id===e);s!==-1&&(this.sessions[s]={...this.sessions[s],...t},t.completed&&this.sessions[s].wordCount>0&&this.updateStreak(this.sessions[s].date),await this.saveData())}getTodaysSessions(){let e=new Date().toISOString().split("T")[0];return this.sessions.filter(t=>t.date===e)}getSessionsForDate(e){return this.sessions.filter(t=>t.date===e)}getSessionsForWeek(e){let t=new Date(e),s=new Date(t);return s.setDate(s.getDate()+7),this.sessions.filter(n=>{let i=new Date(n.date);return i>=t&&i<s})}getSessionsForMonth(e,t){return this.sessions.filter(s=>{let n=new Date(s.date);return n.getFullYear()===e&&n.getMonth()===t})}getTodaysWordCount(){return this.getTodaysSessions().filter(e=>e.completed).reduce((e,t)=>e+t.wordCount,0)}getWeekWordCount(){let e=new Date,t=new Date(e);return t.setDate(e.getDate()-e.getDay()),t.setHours(0,0,0,0),this.sessions.filter(s=>new Date(s.date)>=t&&s.completed).reduce((s,n)=>s+n.wordCount,0)}getMonthWordCount(){let e=new Date,t=new Date(e.getFullYear(),e.getMonth(),1);return this.sessions.filter(s=>new Date(s.date)>=t&&s.completed).reduce((s,n)=>s+n.wordCount,0)}updateStreak(e){let t=this.plugin.settings.streakRule,s=new Date().toISOString().split("T")[0],n=new Date(Date.now()-24*60*60*1e3).toISOString().split("T")[0];t.mode==="daily"?this.updateDailyStreak(e,s,n):this.updateWeeklyStreak()}updateDailyStreak(e,t,s){this.streak.lastWritingDay!==e&&(this.streak.lastWritingDay===s||this.streak.lastWritingDay===""?this.streak.current++:this.canUseGraceDay()?(this.streak.graceUsed++,this.streak.current++):(this.streak.current=1,this.streak.graceUsed=0),this.streak.lastWritingDay=e,this.streak.current>this.streak.longest&&(this.streak.longest=this.streak.current))}updateWeeklyStreak(){let e=new Date,t=new Date(e);t.setDate(e.getDate()-e.getDay());let s=this.getSessionsForWeek(t.toISOString().split("T")[0]),n=new Set(s.filter(a=>a.completed&&a.wordCount>0).map(a=>a.date)).size,i=this.plugin.settings.streakRule.target;n>=i&&this.streak.lastWritingDay!==t.toISOString().split("T")[0]&&(this.streak.current++,this.streak.lastWritingDay=t.toISOString().split("T")[0]),this.streak.weeklyProgress=new Array(7).fill(0);for(let a=0;a<7;a++){let r=new Date(t);r.setDate(t.getDate()+a);let d=r.toISOString().split("T")[0],o=s.some(c=>c.date===d&&c.completed&&c.wordCount>0);this.streak.weeklyProgress[a]=o?1:0}}canUseGraceDay(){let e=this.plugin.settings.streakRule.grace;return this.streak.graceUsed<e}getStreak(){return this.streak}getDashboardStats(){let e=this.sessions.filter(a=>a.completed).sort((a,r)=>new Date(r.date).getTime()-new Date(a.date).getTime()).slice(0,7),t=this.sessions.filter(a=>a.completed).length,s=this.sessions.filter(a=>a.completed&&a.targetCount&&a.wordCount>=a.targetCount).length,n=t>0?s/t*100:0,i=this.getSessionsForWeek(new Date(Date.now()-7*24*60*60*1e3).toISOString().split("T")[0]).filter(a=>a.completed).length;return{todayWordCount:this.getTodaysWordCount(),weekWordCount:this.getWeekWordCount(),monthWordCount:this.getMonthWordCount(),streak:this.streak,sessionsThisWeek:i,completionRate:n,recentSessions:e}}async deleteSession(e){this.sessions=this.sessions.filter(t=>t.id!==e),await this.saveData()}async clearAllData(){this.sessions=[],this.streak=this.getDefaultStreak(),await this.saveData()}exportData(){return{sessions:this.sessions,streak:this.streak,exportDate:new Date().toISOString(),version:"1.0"}}async importData(e){e.sessions&&(this.sessions=[...this.sessions,...e.sessions]),e.streak&&e.streak.longest>this.streak.longest&&(this.streak.longest=e.streak.longest),await this.saveData()}};var g=require("obsidian"),y=class{constructor(e){this.currentSession=null;this.wordCountInterval=null;this.sessionStartContent="";this.plugin=e}startSession(e,t,s){this.currentSession&&this.endSession();let n=`session-${Date.now()}`,i=new Date().toISOString().split("T")[0];this.currentSession={id:n,date:i,startTime:Date.now(),wordCount:0,templateUsed:t,files:[e],completed:!1,targetCount:s},this.captureInitialContent(e),this.startWordCountMonitoring(),this.plugin.settings.ui.notifications&&new g.Notice(`Writing session started! Target: ${s||"No limit"} words`),this.updateStatusBar()}async captureInitialContent(e){try{let t=this.plugin.app.vault.getAbstractFileByPath(e);t instanceof g.TFile&&(this.sessionStartContent=await this.plugin.app.vault.read(t))}catch(t){console.error("Failed to capture initial content:",t),this.sessionStartContent=""}}startWordCountMonitoring(){this.wordCountInterval&&window.clearInterval(this.wordCountInterval),this.wordCountInterval=window.setInterval(()=>{this.updateSessionWordCount()},5e3),this.plugin.registerInterval(this.wordCountInterval)}async updateSessionWordCount(){if(!this.currentSession)return;let e=0;for(let t of this.currentSession.files){let s=this.plugin.app.vault.getAbstractFileByPath(t);if(s instanceof g.TFile)try{let n=await this.plugin.app.vault.read(s),i=this.calculateNewWords(this.sessionStartContent,n);e+=i}catch(n){console.error(`Failed to read file ${t}:`,n)}}this.currentSession.wordCount=Math.max(0,e),this.updateStatusBar(),this.currentSession.targetCount&&this.currentSession.wordCount>=this.currentSession.targetCount&&!this.currentSession.completed&&this.completeSession()}calculateNewWords(e,t){let s=this.countWords(e),n=this.countWords(t);return Math.max(0,n-s)}countWords(e){return e.replace(/^---[\s\S]*?---\n?/,"").trim().split(/\s+/).filter(s=>s.length>0).length}completeSession(){if(this.currentSession){if(this.currentSession.completed=!0,this.currentSession.endTime=Date.now(),this.plugin.dataManager.addSession(this.currentSession),this.plugin.settings.ui.notifications){let e=Math.round((Date.now()-this.currentSession.startTime)/6e4),t=`Great job! You wrote ${this.currentSession.wordCount} words in ${e} minutes.`;new g.Notice(t,5e3)}this.endSession()}}endSession(){this.currentSession&&!this.currentSession.completed&&(this.currentSession.endTime=Date.now(),this.plugin.dataManager.addSession(this.currentSession)),this.currentSession=null,this.sessionStartContent="",this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),this.updateStatusBar()}pauseSession(){this.currentSession&&(this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null),new g.Notice("Writing session paused"))}resumeSession(){this.currentSession&&!this.wordCountInterval&&(this.startWordCountMonitoring(),new g.Notice("Writing session resumed"))}getCurrentSession(){return this.currentSession}addFileToCurrentSession(e){this.currentSession&&!this.currentSession.files.includes(e)&&this.currentSession.files.push(e)}setSessionTarget(e){this.currentSession&&(this.currentSession.targetCount=e,this.updateStatusBar())}updateStatusBar(){if(this.plugin.statusBarItem)if(this.currentSession){let e=this.currentSession.targetCount?` (${Math.min(100,Math.round(this.currentSession.wordCount/this.currentSession.targetCount*100))}%)`:"";this.plugin.statusBarItem.setText(`\u270D\uFE0F ${this.currentSession.wordCount}${this.currentSession.targetCount?`/${this.currentSession.targetCount}`:""} words${e}`)}else{let e=this.plugin.dataManager.getTodaysWordCount();this.plugin.statusBarItem.setText(`\u{1F4CA} ${e} words today`)}}getSessionStats(){if(!this.currentSession)return null;let e=Date.now()-this.currentSession.startTime,t=Math.round(e/6e4),s=t>0?Math.round(this.currentSession.wordCount/t):0;return{duration:t,wordCount:this.currentSession.wordCount,wpm:s,targetProgress:this.currentSession.targetCount?this.currentSession.wordCount/this.currentSession.targetCount*100:null}}handleFileOpen(e){this.shouldAutoStartSession(e)?this.startSession(e.path):this.currentSession&&!this.currentSession.files.includes(e.path)&&this.addFileToCurrentSession(e.path)}shouldAutoStartSession(e){return this.currentSession||!["md","txt"].includes(e.extension)?!1:["Journal","Blog","Writing","Draft"].some(n=>e.path.toLowerCase().includes(n.toLowerCase()))}cleanup(){this.endSession(),this.wordCountInterval&&(window.clearInterval(this.wordCountInterval),this.wordCountInterval=null)}};var T=require("obsidian"),h="writing-momentum-dashboard",k=class extends T.ItemView{constructor(t,s){super(t);this.plugin=s}getViewType(){return h}getDisplayText(){return"Writing Dashboard"}getIcon(){return"target"}async onOpen(){this.render()}async onClose(){}render(){let t=this.containerEl.children[1];t.empty(),t.addClass("writing-momentum-dashboard"),this.renderHeader(t),this.renderCurrentSession(t),this.renderTodayStats(t),this.renderStreak(t),this.renderWeeklyProgress(t),this.renderQuickActions(t),this.renderRecentSessions(t)}renderHeader(t){let s=t.createEl("div",{cls:"dashboard-header"});s.createEl("h2",{text:"\u270D\uFE0F Writing Dashboard",cls:"dashboard-title"});let n=s.createEl("button",{text:"\u{1F504} Refresh",cls:"dashboard-refresh-btn"});n.onclick=()=>this.render()}renderCurrentSession(t){let s=this.plugin.sessionManager.getCurrentSession(),n=t.createEl("div",{cls:"dashboard-section current-session"});if(s){n.createEl("h3",{text:"\u{1F3AF} Active Session"});let i=this.plugin.sessionManager.getSessionStats();if(i){let o=n.createEl("div",{cls:"session-stats-grid"});this.createStatCard(o,"Words Written",i.wordCount.toString(),"\u{1F4DD}"),this.createStatCard(o,"Duration",`${i.duration}m`,"\u23F1\uFE0F"),this.createStatCard(o,"WPM",i.wpm.toString(),"\u26A1"),i.targetProgress!==null&&this.createStatCard(o,"Progress",`${Math.round(i.targetProgress)}%`,"\u{1F4CA}")}let a=n.createEl("div",{cls:"session-actions"}),r=a.createEl("button",{text:"\u2705 Complete Session",cls:"session-btn complete-btn"});r.onclick=()=>{this.plugin.sessionManager.completeSession(),this.render()};let d=a.createEl("button",{text:"\u23F9\uFE0F End Session",cls:"session-btn end-btn"});d.onclick=()=>{this.plugin.sessionManager.endSession(),this.render()}}else n.createEl("h3",{text:"\u{1F4A4} No Active Session"}),n.createEl("p",{text:"Start writing from a reminder or use a template to begin tracking.",cls:"no-session-message"})}renderTodayStats(t){let s=this.plugin.dataManager.getDashboardStats(),n=t.createEl("div",{cls:"dashboard-section today-stats"});n.createEl("h3",{text:"\u{1F4C5} Today's Progress"});let i=n.createEl("div",{cls:"stats-grid"});this.createStatCard(i,"Words Today",s.todayWordCount.toString(),"\u{1F4DD}"),this.createStatCard(i,"This Week",s.weekWordCount.toString(),"\u{1F4CA}"),this.createStatCard(i,"This Month",s.monthWordCount.toString(),"\u{1F4C8}"),this.createStatCard(i,"Sessions This Week",s.sessionsThisWeek.toString(),"\u270D\uFE0F")}renderStreak(t){let s=this.plugin.dataManager.getDashboardStats(),n=t.createEl("div",{cls:"dashboard-section streak-section"});n.createEl("h3",{text:"\u{1F525} Writing Streak"});let i=n.createEl("div",{cls:"streak-grid"}),a=i.createEl("div",{cls:"streak-card current-streak"});a.createEl("div",{text:s.streak.current.toString(),cls:"streak-number"}),a.createEl("div",{text:"Current Streak",cls:"streak-label"});let r=i.createEl("div",{cls:"streak-card longest-streak"});r.createEl("div",{text:s.streak.longest.toString(),cls:"streak-number"}),r.createEl("div",{text:"Longest Streak",cls:"streak-label"}),this.plugin.settings.streakRule.mode==="weekly"&&this.renderWeeklyStreak(n,s.streak)}renderWeeklyStreak(t,s){let n=t.createEl("div",{cls:"weekly-streak"});n.createEl("h4",{text:"This Week"});let i=n.createEl("div",{cls:"week-days"}),a=["S","M","T","W","T","F","S"];for(let o=0;o<7;o++){let c=i.createEl("div",{cls:"week-day"});c.createEl("div",{text:a[o],cls:"day-name"});let p=c.createEl("div",{cls:"day-dot"});s.weeklyProgress&&s.weeklyProgress[o]&&p.addClass("completed")}let r=s.weeklyProgress?s.weeklyProgress.reduce((o,c)=>o+c,0):0,d=this.plugin.settings.streakRule.target;n.createEl("p",{text:`${r}/${d} days completed`,cls:"weekly-progress"})}renderWeeklyProgress(t){let s=t.createEl("div",{cls:"dashboard-section weekly-progress"});s.createEl("h3",{text:"\u{1F4CA} Weekly Overview"});let n=this.plugin.dataManager.getDashboardStats(),i=s.createEl("div",{cls:"completion-rate"});i.createEl("div",{text:`${Math.round(n.completionRate)}%`,cls:"completion-percentage"}),i.createEl("div",{text:"Target Achievement Rate",cls:"completion-label"})}renderQuickActions(t){let s=t.createEl("div",{cls:"dashboard-section quick-actions"});s.createEl("h3",{text:"\u26A1 Quick Actions"});let n=s.createEl("div",{cls:"action-buttons"}),i=this.plugin.templateEngine.getAllTemplates();for(let d of i.slice(0,3)){let o=n.createEl("button",{text:`\u{1F4DD} ${d.name}`,cls:"action-btn template-btn"});o.onclick=async()=>{try{await this.plugin.templateEngine.createNoteFromTemplate(d.id),this.render()}catch(c){console.error("Failed to create note from template:",c)}}}let a=n.createEl("button",{text:"\u{1F4CB} Quick Note",cls:"action-btn"});a.onclick=()=>this.plugin.createQuickNote();let r=n.createEl("button",{text:"\u2699\uFE0F Settings",cls:"action-btn"});r.onclick=()=>{this.plugin.app.setting.open(),this.plugin.app.setting.openTabById("writing-momentum")}}renderRecentSessions(t){let s=this.plugin.dataManager.getDashboardStats(),n=t.createEl("div",{cls:"dashboard-section recent-sessions"});if(n.createEl("h3",{text:"\u{1F4CB} Recent Sessions"}),s.recentSessions.length===0){n.createEl("p",{text:"No recent sessions. Start writing to see your progress here!",cls:"no-sessions-message"});return}let i=n.createEl("div",{cls:"sessions-list"});for(let a of s.recentSessions.slice(0,5)){let r=i.createEl("div",{cls:"session-item"});r.createEl("div",{cls:"session-date"}).createEl("span",{text:a.date});let o=r.createEl("div",{cls:"session-stats"});if(o.createEl("span",{text:`${a.wordCount} words`}),a.templateUsed&&o.createEl("span",{text:a.templateUsed,cls:"session-template"}),a.targetCount){let c=Math.round(a.wordCount/a.targetCount*100);o.createEl("span",{text:`${c}%`,cls:`session-progress ${c>=100?"completed":""}`})}}}createStatCard(t,s,n,i){let a=t.createEl("div",{cls:"stat-card"});a.createEl("div",{text:i,cls:"stat-icon"}),a.createEl("div",{text:n,cls:"stat-value"}),a.createEl("div",{text:s,cls:"stat-label"})}refresh(){this.render()}};var W={reminders:[{id:"evening-default",days:[1,2,3,4,5,6,0],time:"21:00",secondShotMins:30,templateId:"daily-3lines",dnd:{start:"23:30",end:"07:30"},enabled:!0}],streakRule:{mode:"weekly",target:5,grace:1},locale:"en",dateFormat:"YYYY-MM-DD",paths:{templates:".writing-momentum/templates",prompts:".writing-momentum/prompts.md"},ui:{showStatusBar:!0,showRibbonIcon:!0,notifications:!0}};var v=class extends l.Plugin{constructor(){super(...arguments);this.statusBarItem=null}async onload(){await this.loadSettings(),this.dataManager=new f(this),this.templateEngine=new S(this),this.sessionManager=new y(this),this.reminderScheduler=new w(this),await this.dataManager.loadData(),await this.templateEngine.initialize(),this.registerView(h,t=>new k(t,this)),this.settings.ui.showRibbonIcon&&this.addRibbonIcon("target","Writing Momentum",()=>{this.activateView()}),this.settings.ui.showStatusBar&&(this.statusBarItem=this.addStatusBarItem()),this.registerCommands(),this.addSettingTab(new C(this.app,this)),this.registerEvent(this.app.workspace.on("file-open",t=>{t&&this.sessionManager.handleFileOpen(t)})),this.reminderScheduler.start()}registerCommands(){this.addCommand({id:"open-dashboard",name:"Open Writing Dashboard",callback:()=>this.activateView()}),this.addCommand({id:"new-from-template",name:"New note from template",callback:()=>this.showTemplateSelector()}),this.addCommand({id:"quick-note",name:"Create quick note",callback:()=>this.createQuickNote()}),this.addCommand({id:"complete-session",name:"Complete writing session",callback:()=>this.sessionManager.completeSession()}),this.addCommand({id:"snooze-reminder",name:"Snooze reminder (10 minutes)",callback:()=>{new l.Notice("Reminder snoozed for 10 minutes")}}),this.addCommand({id:"insert-random-prompt",name:"Insert random writing prompt",callback:()=>this.insertRandomPrompt()})}async activateView(){let{workspace:t}=this.app,s=t.getLeavesOfType(h)[0];s||(s=t.getRightLeaf(!1),await s.setViewState({type:h,active:!0})),t.revealLeaf(s)}async showTemplateSelector(){let t=this.templateEngine.getAllTemplates();if(t.length===0){new l.Notice("No templates found. Creating default templates..."),await this.templateEngine.reloadTemplates();return}let s=t[0];await this.templateEngine.createNoteFromTemplate(s.id)}async createQuickNote(){let t=new Date().toISOString().split("T")[0],s=new Date().toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"}),n=`${t} Quick Note ${s}.md`,i=`# Quick Note - ${t}

${this.templateEngine.getRandomPrompt()}

---

`;try{let a=await this.app.vault.create(n,i);await this.app.workspace.getLeaf().openFile(a),this.sessionManager.startSession(a.path)}catch(a){console.error("Failed to create quick note:",a),new l.Notice("Failed to create quick note")}}async insertRandomPrompt(){let t=this.app.workspace.getActiveViewOfType(l.MarkdownView);if(!t){new l.Notice("No active note to insert prompt into");return}let s=this.templateEngine.getRandomPrompt(),n=t.editor,i=n.getCursor();n.replaceRange(s,i)}onunload(){this.sessionManager.cleanup(),this.reminderScheduler.stop()}async loadSettings(){this.settings=Object.assign({},W,await this.loadData())}async saveSettings(){await this.saveData(this.settings),this.reminderScheduler.reschedule()}},C=class extends l.PluginSettingTab{constructor(t,s){super(t,s);this.plugin=s}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Writing Momentum Settings"}),t.createEl("h3",{text:"\u23F0 Reminders"}),new l.Setting(t).setName("Default reminder time").setDesc("Time for daily writing reminders (24-hour format)").addText(s=>{var n;return s.setPlaceholder("21:00").setValue(((n=this.plugin.settings.reminders[0])==null?void 0:n.time)||"21:00").onChange(async i=>{this.plugin.settings.reminders[0]&&(this.plugin.settings.reminders[0].time=i,await this.plugin.saveSettings())})}),t.createEl("h3",{text:"\u{1F525} Streak Settings"}),new l.Setting(t).setName("Streak mode").setDesc("How to calculate writing streaks").addDropdown(s=>s.addOption("daily","Daily").addOption("weekly","Weekly").setValue(this.plugin.settings.streakRule.mode).onChange(async n=>{this.plugin.settings.streakRule.mode=n,await this.plugin.saveSettings()})),new l.Setting(t).setName("Weekly target").setDesc("Number of writing days needed per week").addSlider(s=>s.setLimits(1,7,1).setValue(this.plugin.settings.streakRule.target).setDynamicTooltip().onChange(async n=>{this.plugin.settings.streakRule.target=n,await this.plugin.saveSettings()})),new l.Setting(t).setName("Grace days").setDesc("Number of days you can miss without breaking streak").addSlider(s=>s.setLimits(0,3,1).setValue(this.plugin.settings.streakRule.grace).setDynamicTooltip().onChange(async n=>{this.plugin.settings.streakRule.grace=n,await this.plugin.saveSettings()})),t.createEl("h3",{text:"\u{1F3A8} Interface"}),new l.Setting(t).setName("Show status bar").setDesc("Display writing progress in the status bar").addToggle(s=>s.setValue(this.plugin.settings.ui.showStatusBar).onChange(async n=>{this.plugin.settings.ui.showStatusBar=n,await this.plugin.saveSettings()})),new l.Setting(t).setName("Show ribbon icon").setDesc("Display plugin icon in the left ribbon").addToggle(s=>s.setValue(this.plugin.settings.ui.showRibbonIcon).onChange(async n=>{this.plugin.settings.ui.showRibbonIcon=n,await this.plugin.saveSettings()})),new l.Setting(t).setName("Enable notifications").setDesc("Show notifications for achievements and reminders").addToggle(s=>s.setValue(this.plugin.settings.ui.notifications).onChange(async n=>{this.plugin.settings.ui.notifications=n,await this.plugin.saveSettings()})),t.createEl("h3",{text:"\u{1F4C1} File Paths"}),new l.Setting(t).setName("Templates folder").setDesc("Folder containing writing templates").addText(s=>s.setPlaceholder(".writing-momentum/templates").setValue(this.plugin.settings.paths.templates).onChange(async n=>{this.plugin.settings.paths.templates=n,await this.plugin.saveSettings()})),new l.Setting(t).setName("Prompts file").setDesc("File containing writing prompts").addText(s=>s.setPlaceholder(".writing-momentum/prompts.md").setValue(this.plugin.settings.paths.prompts).onChange(async n=>{this.plugin.settings.paths.prompts=n,await this.plugin.saveSettings()})),t.createEl("h3",{text:"\u{1F4BE} Data Management"}),new l.Setting(t).setName("Export data").setDesc("Export all writing sessions and streak data").addButton(s=>s.setButtonText("Export").onClick(()=>{let n=this.plugin.dataManager.exportData(),i=new Blob([JSON.stringify(n,null,2)],{type:"application/json"}),a=URL.createObjectURL(i),r=document.createElement("a");r.href=a,r.download=`writing-momentum-export-${new Date().toISOString().split("T")[0]}.json`,r.click()}))}};
